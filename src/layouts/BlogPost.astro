---
import type { CollectionEntry } from 'astro:content';
import ParallaxHero from '../components/layout/ParallaxHero.svelte';
import Base from './Base.astro';
import { SITE_DESCRIPTION } from 'src/consts';
import FormattedDate from '@components/utility/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const post = Astro.props;
const { title, description, pubDate, updatedDate, heroImage } = post;

const categories = [];
const artistCredit = post.artistCredit;
const authorName = 'Johnny Wubrg'; //post.author?.node?.name;

const seoTitle = `${SITE_DESCRIPTION} | ${title}`;
const seoDescription = description ?? SITE_DESCRIPTION;
---

<Base title={seoTitle} description={seoDescription}>
  <article class="post-wrap">
    {heroImage ? (
      <ParallaxHero src={heroImage.src} client:load>
        <h1>{title}</h1>
        <p class="post-meta">
          {authorName} on <FormattedDate date={pubDate} />
          {artistCredit && <> | üñåÔ∏è Artist Credit: {artistCredit}</>}
        </p>
      </ParallaxHero>
    ) : (
      <div class="post-title container">
        <h1>{title}</h1>
        <p class="post-meta">
          {authorName} on <FormattedDate date={pubDate} />
          {artistCredit && <> | üñåÔ∏è Artist Credit: {artistCredit}</>}
        </p>
      </div>
    )}
  
    <div class="post-body container">
      <div class="post-content">
        <slot />
      </div>
  
      <!-- {categories.length > 0 && (
        <div class="category-list">
          <h4>Categorized As</h4>
          <p>{categories.join(', ')}</p>
        </div>
      )} -->
    </div>
  </article>
</Base>
