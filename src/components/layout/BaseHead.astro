---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../../styles/main.scss';
import { SITE_TITLE } from '../../consts';
import FallbackImage from '../../assets/blog-placeholder-1.jpg';
import type { ImageMetadata } from 'astro';

interface Props {
  title: string;
  description: string;
  image?: ImageMetadata;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = FallbackImage } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="stylesheet" href="https://use.typekit.net/peo0kpb.css" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
  rel="alternate"
  type="application/rss+xml"
  title={SITE_TITLE}
  href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link
  rel="preload"
  href="/fonts/Bambino/Bambino.ttf"
  as="font"
  type="font/ttf"
  crossorigin
/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image.src, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image.src, Astro.url)} />

{
  import.meta.env.MODE === 'production' && (
    <script
      is:inline
      defer
      data-domain="johnnywubrg.com"
      src="https://plausible.io/js/script.js"
    />
  )
}
